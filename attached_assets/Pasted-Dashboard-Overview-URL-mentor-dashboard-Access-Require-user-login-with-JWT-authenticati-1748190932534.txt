Dashboard Overview
•  URL: /mentor/dashboard
•  Access:
	•  Require user login with JWT authentication.
	•  Restrict access to users with the “mentor” role; redirect others to login or show an error.
•  UI/UX:
	•  Design a clean, modern interface with Tailwind CSS.
	•  Make it responsive for web and mobile users.
	•  Include tabs for sections like “My Sessions,” “Requests,” “Earnings,” “Analytics,” “Profile,” and “Notifications.”
	•  Add subtabs under “My Sessions” for “Draft,” “Scheduled,” and “Past.”
•  Core Features:
	•  Session Management: Create, edit, publish, and track sessions.
	•  Request Handling: View and respond to learner requests.
	•  Earnings Tracking: Show earnings and allow payout requests.
	•  Analytics: Display mentor performance metrics.
	•  Profile Management: Update mentor details and images.
	•  Notifications: Provide real-time alerts.
	•  Live Sessions: Enable video sessions with WebRTC.

3. Session Management
•  Features:
	•  Create new sessions with a form (title, schedule, etc.).
	•  Edit session details before publishing.
	•  Publish sessions to make them available to learners.
	•  View sessions in “Draft,” “Scheduled,” and “Past” tabs with participant counts and status.
•  Real-Time:
	•  Update session details instantly using WebSockets (e.g., participant joins).
•  Storage:
	•  Save session data with fields like title, status, and participants.

4. Request Handling
•  Features:
	•  List learner requests with details (e.g., topic, time preferences).
	•  Accept or decline requests, choosing a time if accepted.
•  UI/UX:
	•  Show a “Requests” tab with a count of pending requests.
	•  Use a popup or modal for accepting requests with a time selector.
•  Storage:
	•  Store requests with fields like learner name, topic, and status.

5. Earnings Tracking
•  Features:
	•  Show total earnings, monthly breakdowns, and payout history.
	•  Include a button to request payouts.
•  UI/UX:
	•  Display earnings in a dedicated tab with clear summaries.
	•  Add a confirmation step for payout requests.
•  Storage:
	•  Track earnings linked to completed sessions or bookings.

6. Analytics
•  Features:
	•  Show stats like total students, session count, and average rating.
	•  Offer insights (e.g., most popular session times).
•  UI/UX:
	•  Present data in a tab with cards or simple charts.
•  Storage:
	•  Pull data from session, booking, and feedback records.

7. Profile Management
•  Features:
	•  Edit mentor bio, expertise, and profile picture.
	•  Preview image uploads before saving.
•  UI/UX:
	•  Provide a “Profile” tab with an editable form.
•  Storage:
	•  Update the mentor’s user profile with new details.

8. Notifications
•  Features:
	•  Send real-time alerts for new requests, session changes, etc.
	•  Show urgent alerts as banners (e.g., “Session starts in 5 minutes”).
	•  Use toast popups for minor updates.
•  UI/UX:
	•  Add a bell icon with an unread notification count.
	•  Link notifications to relevant pages (e.g., a new request).
•  Implementation:
	•  Use WebSockets for instant updates.

9. Live Sessions with WebRTC
•  Features:
	•  Add a “Start Session” button for scheduled sessions.
	•  Connect mentors and learners via video/audio.
	•  Support screen sharing if possible.
•  Implementation:
	•  Use WebRTC for peer-to-peer connections.
	•  Handle signaling and network issues with WebSockets.
	•  Ensure it works across different devices and networks.
•  UI/UX:
	•  Show clear status messages (e.g., “Connecting…”).

10. Security
•  Authentication: Use JWT to secure login.
•  Access Control: Limit dashboard to mentors only.
•  Safety: Check and clean all user inputs to avoid security risks.
•  Encryption: Use HTTPS for safe data transfer.

11. Real-Time and Data Handling
•  WebSockets: Enable real-time features like notifications and session updates.
•  Database:
	•  Use SQLite3 with fast, organized data access.
	•  Keep data consistent (e.g., when updating session status).
•  APIs: Create endpoints for fetching and updating data (e.g., session lists).

12. UI/UX Details
•  Styling: Use Tailwind CSS for a sleek, mobile-friendly look.
•  Interactivity:
	•  Add buttons like “Create Session” that open forms.
	•  Update the page live without refreshing.
	•  Show popups for actions like accepting requests.
•  Mobile: Ensure all features work well on small screens.